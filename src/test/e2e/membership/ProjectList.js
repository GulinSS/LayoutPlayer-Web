// Generated by CoffeeScript 1.4.0
var addProjectSubmitData, casper, utils;

utils = require('utils');

casper = require('casper').create({
  pageSettings: {
    loadImages: false,
    loadPlugins: false
  }
});

casper.start("http://localhost:3333/sections/membership/", function() {
  this.capture('sections.membership.projectList.png');
  this.test.comment('ProjectList');
  this.test.assertExists('ul.thumbnails', 'the list must be present by thumbnails');
  this.test.assertSelectorHasText('.btn.btn-primary', 'Добавить проект', 'add project button must be present');
  return this.test.assertExists('.thumbnail .btn.btn-danger i.icon-remove', 'every project can be deleted by user');
});

casper.then(function() {
  try {
    return this.click('.btn.btn-primary i.icon-plus');
  } catch (e) {
    return this.test.fail('failed to click on Add Project button, may be it is not exists?');
  }
});

addProjectSubmitData = {
  logo: 'sample.png',
  header: 'Some project'
};

casper.waitForSelector('#addProject', function() {
  this.capture('sections.membership.addProject.png');
  this.test.comment('AddProject');
  this.test.assertExists('.btn.btn-primary i.icon-ok', 'save button must be present');
  this.test.assertExists('.btn i.icon-ban-circle', 'cancel button must be preset');
  this.test.assertExists('form#addProject-form input[type=text, name=header]', 'header form field must be present');
  this.test.assertExists('form#addProject-form input[type=file, name=logo]', 'Logo upload field must be present');
  this.fill('form#addProject-form', addProjectSubmitData, true);
  return this.test.done();
}, function() {
  return this.test.fail('failed to load Add Project page, may be it is not exists?');
}, 1000);

casper.then(function() {
  this.test.assertTextExists(addProjectSubmitData.description, 'Added project must be present after form submit');
  return this.test.assertSelectorHasText('div.thumbnail h3', addProjectSubmitData.header, 'Added project must have correct header');
});

casper.thenEvaluate(function(data) {
  var $correctProject;
  $correctProject = $('div.thumbnail h3').filter(function() {
    return this.text() === data.header;
  });
  return $correctProject.first().parent().find(".btn.btn-danger").click();
}, addProjectSubmitData);

casper.then(function() {
  this.test.assertSelectorDoesntHaveText('div.thumbnail h3', addProjectSubmitData.header, 'Added test project must be removed after click on delete button');
  return this.test.done();
});

casper.run();
